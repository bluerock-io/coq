; IDE Server
(ocamllex utf8_convert config_lexer rocq_lex)

(library
 (name core)
 (public_name coqide-server.core)
 (wrapped false)
 (modules document)
 (libraries coq-core.boot coq-core.lib))

(executable
 (name idetop)
 (public_name coqidetop.opt)
 (package coqide-server)
 (modules idetop)
 (libraries coq-core.toplevel coqide-server.protocol platform_specific)
 (modes exe byte)
 (link_flags -linkall))

(install
 (section bin)
 (package coqide-server)
 (files (idetop.bc as coqidetop.byte)))

(library
 (name platform_specific)
 (wrapped false)
 (modules shared shared_os_specific)
 (foreign_stubs
  (language c)
  (names shared_os_stubs))
)

(executable
 (name gen_gtk_platform)
 (modules gen_gtk_platform)
 (libraries conf))

(rule
 (targets gtk_platform.conf config.ml)
 (action (run ./gen_gtk_platform.exe)))

(rule
 (targets rocqide_os_specific.ml)
 (action (copy# rocqide_%{read:gtk_platform.conf}.ml.in %{targets})))

(rule
 (targets shared_os_specific.ml)
 (action (copy# shared_%{read:gtk_platform.conf}.ml.in %{targets})))

(rule
 (targets rocqide_os_stubs.c)
 (action (copy rocqide_%{read:gtk_platform.conf}.c.in %{targets})))

(rule
 (targets shared_os_stubs.c)
 (action (copy shared_%{read:gtk_platform.conf}.c.in %{targets})))

; Input-method bindings
(executable
 (name default_bindings_src)
 (modules default_bindings_src))

(rule
 (targets default.bindings)
 (deps (:gen ./default_bindings_src.exe))
 (action (run %{gen} %{targets})))
